#!/bin/bash

echo "=== Kubernetes Local Cluster Setup Script ==="
echo "Objective: Learn how to set up and use Kubernetes locally"
echo ""

# Ensure minikube is installed (as per requirements)
echo "Step 1: Ensuring minikube is installed..."
if ! command -v minikube &> /dev/null; then
    echo "‚ùå Error: minikube is not installed. Please install minikube first."
    echo "Installation instructions:"
    echo "  - Visit: https://minikube.sigs.k8s.io/docs/start/"
    echo "  - Or use package managers:"
    echo "    ‚Ä¢ macOS: brew install minikube"
    echo "    ‚Ä¢ Windows: choco install minikube"
    echo "    ‚Ä¢ Ubuntu: sudo apt-get install minikube"
    exit 1
fi

echo "‚úÖ minikube is installed"
minikube version

echo ""
echo "Step 2: Checking if kubectl is installed..."
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå Error: kubectl is not installed. Please install kubectl first."
    echo "Visit: https://kubernetes.io/docs/tasks/tools/"
    exit 1
fi

echo "‚úÖ kubectl is installed"
kubectl version --client

# Start Kubernetes cluster on your machine (as per requirements)
echo ""
echo "Step 3: Starting Kubernetes cluster on your machine..."
echo "Using minikube to create a local Kubernetes cluster..."
minikube start --driver=docker

if [ $? -eq 0 ]; then
    echo "‚úÖ Kubernetes cluster started successfully"
else
    echo "‚ùå Failed to start Kubernetes cluster"
    exit 1
fi

# Wait for cluster to be ready
echo ""
echo "Waiting for cluster to be ready..."
sleep 10

# Verify that the cluster is running using kubectl cluster-info (as per requirements)
echo ""
echo "Step 4: Verifying that the cluster is running using kubectl cluster-info..."
kubectl cluster-info

if [ $? -eq 0 ]; then
    echo "‚úÖ Cluster info retrieved successfully - Cluster is running!"
else
    echo "‚ùå Failed to retrieve cluster info - Cluster may not be running properly"
    exit 1
fi

# Get cluster nodes for learning purposes
echo ""
echo "Step 5: Getting cluster nodes information..."
kubectl get nodes

# Retrieve the available pods (as per requirements)
echo ""
echo "Step 6: Retrieving the available pods..."
echo "Listing all pods across all namespaces:"
kubectl get pods --all-namespaces

echo ""
echo "Pod count summary:"
kubectl get pods --all-namespaces --no-headers | wc -l | awk '{print "Total pods: " $1}'

# Enable useful addons for local Kubernetes learning
echo ""
echo "Step 7: Enabling useful addons for local development..."
echo "Enabling ingress addon..."
minikube addons enable ingress
echo "Enabling metrics-server addon..."
minikube addons enable metrics-server

echo ""
echo "=== Kubernetes Local Setup Complete ==="
echo "üéâ Your local Kubernetes cluster is now running and ready!"
echo ""
echo "Summary of what was accomplished:"
echo "‚úÖ 1. Ensured minikube is installed"
echo "‚úÖ 2. Started Kubernetes cluster on your machine" 
echo "‚úÖ 3. Verified cluster is running using kubectl cluster-info"
echo "‚úÖ 4. Retrieved available pods"
echo "‚úÖ 5. Enabled useful addons (ingress, metrics-server)"
echo ""
echo "Next steps for learning Kubernetes locally:"
echo "  kubectl get pods --all-namespaces    # List all pods"
echo "  kubectl get services                 # List all services"  
echo "  kubectl get nodes                    # List cluster nodes"
echo "  minikube dashboard                   # Open Kubernetes web dashboard"
echo "  kubectl create deployment test --image=nginx  # Create a test deployment"
echo ""
echo "Cluster management commands:"
echo "  minikube status    # Check cluster status"
echo "  minikube stop      # Stop the cluster"
echo "  minikube start     # Start the cluster"  
echo "  minikube delete    # Delete the cluster completely"
